name: import-jar

on:
  workflow_dispatch:
    

jobs:
  #############################################################
  # Builds the code
  # Currently this is not building and JAR files, but you would do that here
  # This is packaging up the files from Git to the Artifacts files
  #############################################################
  Build:
    runs-on: ubuntu-latest 
    env:
      keyvaultname: 'devopstestadb-kv'
      import_dbfs: 'dbfs:/FileStore/${menv}/DATAX/jars/AESEncryption_UDF_V3_3_0.jar'
      resourceGroupName: 'devops-test-deploy'
      databricksWorkspaceName: 'devopstestadb'
      DBFS_DIRECTORY: '/FileStore/Jars'
      GIT_DBFS_DIRECTORY: '${{ github.workspace }}/Job-Config/DATAX'
      cluster_name: 'DevOpsTest'
      NOTEBOOK_DEPLOYMENT_PATH: '/DATAXDEV'
      notebookDirectory: '${{ github.workspace }}'
      import_nb: '/ADB/DATAX/test-script.py'
      execute_nb: 'test-script'
      function: 'encrypt'
      class: 'AESEncryptedUDF'
      import_nb_dir: '${{ github.workspace }}/ADB/DATAX'
      
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v2


    - name: Install dependencies
      run: |
        cd "$GITHUB_WORKSPACE/Deployment-Scripts/AzureDatabricks"
        python3 -m pip install --upgrade pip
        pip install -r requirements.txt
    
    
    - name: Azure Login
      uses: Azure/login@v1
      with:
        creds: ${{ secrets.ACN_SP_DEV }}
        
        
    - name: Azure Key Vault Action
      uses: Azure/get-keyvault-secrets@v1
      with:
        keyvault: ${{ env.keyvaultname }}
        secrets: 'client-id,client-secret,subscriptionId,tenantId'
      id: keyvaultsecrets
      

#     - name: Deploy Import DBFS file
#       run:  |
#         echo "Begin partial diff change"
#         if [[ "${{ env.import_dbfs }}" != "" ]]; then
#           echo ${{ env.import_dbfs }}
#           chmod +x $GITHUB_WORKSPACE/Deployment-Scripts/AzureDatabricks/adb-deploy-dbfs.py
#           python3 $GITHUB_WORKSPACE/Deployment-Scripts/AzureDatabricks/adb-deploy-dbfs.py \
#             ${{ steps.keyvaultsecrets.outputs.tenantId }} \
#             ${{ steps.keyvaultsecrets.outputs.client-id }} \
#             ${{ steps.keyvaultsecrets.outputs.client-secret}} \
#             ${{ steps.keyvaultsecrets.outputs.subscriptionId }} \
#             ${{ env.resourceGroupName }} \
#             ${{ env.databricksWorkspaceName }} \
#             ${{ env.DBFS_DIRECTORY }} \
#             ${{ env.GIT_DBFS_DIRECTORY}} \
#             ${{ env.import_dbfs }}    
#         else
#           echo "Empty list"
#         fi

#     - name: Deploy install library
#       run:  |
#         echo "Begin partial diff change"
#         if [[ "${{ env.import_dbfs }}" != "" ]]; then
#           echo ${{ env.import_dbfs }}
#           chmod +x $GITHUB_WORKSPACE/Deployment-Scripts/AzureDatabricks/adb-install-jar.py
#           python3 $GITHUB_WORKSPACE/Deployment-Scripts/AzureDatabricks/adb-install-jar.py \
#             ${{ steps.keyvaultsecrets.outputs.tenantId }} \
#             ${{ steps.keyvaultsecrets.outputs.client-id }} \
#             ${{ steps.keyvaultsecrets.outputs.client-secret}} \
#             ${{ steps.keyvaultsecrets.outputs.subscriptionId }} \
#             ${{ env.resourceGroupName }} \
#             ${{ env.databricksWorkspaceName }} \
#             ${{ env.DBFS_DIRECTORY }} \
#             ${{ env.GIT_DBFS_DIRECTORY}} \
#             ${{ env.import_dbfs }} \
#             ${{ env.cluster_name }}
#         else
#           echo "Empty list"
#         fi
        
    - name: Replace Variable in Notebook
      run:  |
        echo "Begin partial diff change"
        if [[ "${{ env.import_nb }}" != "" ]]; then
          python3 $GITHUB_WORKSPACE/Deployment-Scripts/AzureDatabricks/replace-variable.py \
            ${{ env.import_nb_dir }} \
            ${{ env.function }} \
            ${{ env.class }} 
        else
          echo "Empty list"
        fi
        
    - name: Deploy Notebook
      run:  |
        echo "Begin partial diff change"
        if [[ "${{ env.import_nb }}" != "" ]]; then
          python3 $GITHUB_WORKSPACE/Deployment-Scripts/AzureDatabricks/adb-deploy.py \
            ${{ steps.keyvaultsecrets.outputs.tenantId }} \
            ${{ steps.keyvaultsecrets.outputs.client-id }} \
            ${{ steps.keyvaultsecrets.outputs.client-secret }} \
            ${{ steps.keyvaultsecrets.outputs.subscriptionId }} \
            ${{ env.resourceGroupName }} \
            ${{ env.databricksWorkspaceName }} \
            ${{ env.NOTEBOOK_DEPLOYMENT_PATH }} \
            ${{ env.notebookDirectory }} \
            ${{ env.import_nb }}
        else
          echo "Empty list"
        fi
        
        
#     - name: Execute Databricks Notebooks
#       run: |
#         python3 $GITHUB_WORKSPACE/Deployment-Scripts/AzureDatabricks/adb-execute.py \
#           ${{ steps.keyvaultsecrets.outputs.tenantId }} \
#           ${{ steps.keyvaultsecrets.outputs.client-id }} \
#           ${{ steps.keyvaultsecrets.outputs.client-secret }} \
#           ${{ steps.keyvaultsecrets.outputs.subscriptionId }} \
#           ${{ env.resourceGroupName }} \
#           ${{ env.databricksWorkspaceName }} \
#           ${{ env.NOTEBOOK_DEPLOYMENT_PATH }} \
#           ${{ env.cluster_name }} \
#           ${{ env.NOTEBOOK_DEPLOYMENT_PATH }}/${{ env.execute_nb }}
          
#     - name: Remove Notebook
#       run:  |
#         echo "Begin partial diff change"
#         if [[ "${{ env.import_nb }}" != "" ]]; then
#           python3 $GITHUB_WORKSPACE/Deployment-Scripts/AzureDatabricks/adb-remove.py \
#             ${{ steps.keyvaultsecrets.outputs.tenantId }} \
#             ${{ steps.keyvaultsecrets.outputs.client-id }} \
#             ${{ steps.keyvaultsecrets.outputs.client-secret }} \
#             ${{ steps.keyvaultsecrets.outputs.subscriptionId }} \
#             ${{ env.resourceGroupName }} \
#             ${{ env.databricksWorkspaceName }} \
#             ${{ env.NOTEBOOK_DEPLOYMENT_PATH }} \
#             ${{ env.notebookDirectory }} \
#             ${{ env.import_nb }}
#         else
#           echo "Empty list"
#         fi
