

name: getcommitidbytag


# Manual trigger with parameters
on:
  workflow_dispatch:
    inputs:
      # This is the path of your notebooks in Git.  Currently, this is not recursively deploying notebooks

      INPUT_TAG:
        description: 'Tag name or baseline name'
        required: true
        default: 'BSL002'
        


jobs:
  #############################################################
  # Builds the code
  # Currently this is not building and JAR files, but you would do that here
  # This is packaging up the files from Git to the Artifacts files
  #############################################################
  Build:
    runs-on: ubuntu-latest
    env:
       input_tag: '${{ github.event.inputs.INPUT_TAG }}'
       repo_url: 'https://github.com/kritktongrakroj/SCB.git'
       repo_path: '${{ github.workspace }}/clonrepo'
      
    # Checkout code
    steps:
    - name: Checkout code
      uses: actions/checkout@v2


    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8 #install the python needed
      
    - name: Install dependencies
      run: |
        cd "$GITHUB_WORKSPACE/Deployment-Scripts/rollback"
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      
    - name: Get commit ID from tag
      run: |
       chmod +x $GITHUB_WORKSPACE/Deployment-Scripts/rollback/taggetcommitid.py
       output=$(python3 $GITHUB_WORKSPACE/Deployment-Scripts/rollback/taggetcommitid.py ${{ env.input_tag }} ${{ env.repo_url }} ${{ env.repo_path }})
       echo "::set-output name=commitid::$output"
      id: set-commitid
  
    - name: Remove temp repo
      run:  |
       rm -rf ${{ env.repo_path }}

    - name: Print commit id from tag
      run: echo "${{ steps.set-commitid.outputs.commitid }}"

    - name: Checkout code from tag
      uses: actions/checkout@v2
        ref: '${{ steps.set-commitid.outputs.commitid }}'

    # Publish Artifact: Deployment-Scripts
    - name: 'Publish Artifact: Deployment-Scripts' 
      uses: actions/upload-artifact@v2
      with:
        name: 'deployment-scripts'
        path: '${{ github.workspace }}/Deployment-Scripts/rollback'
    
   
#############################################################
# Deploy to Dev
#############################################################
  Dev:
    needs: Build
    runs-on: ubuntu-latest
    env:

       inputtag: '${{ github.event.inputs.INPUT_TAG }}'

    steps:
    
    # Download Artifact: Deployment Scripts
    - name: 'Download Artifact: Deployment Scripts' 
      uses: actions/download-artifact@v2
      with:
        name: 'deployment-scripts'
        path: ${{ github.workspace }}/Deployment-Scripts/rollback

    